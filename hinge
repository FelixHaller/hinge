#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Authors: Felix Haller <ich@ein-freier-mensch.de>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of either or both of the following licenses:
#
# 1) the GNU Lesser General Public License version 3, as published by the
# Free Software Foundation; and/or
# 2) the GNU Lesser General Public License version 2.1, as published by
# the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY or FITNESS FOR A PARTICULAR
# PURPOSE.  See the applicable version of the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of both the GNU Lesser General Public
# License version 3 and version 2.1 along with this program.  If not, see
# <http://www.gnu.org/licenses/>
#


import sys, getopt
from hinge_modules.Daemon import Daemon
from hinge_modules.System import System


def main(argv):
	if (len(sys.argv) < 2):
		printHelp()
	else:
		CLIArgs = sys.argv[1:]
		try:
			opts, args = getopt.getopt(CLIArgs,
									   "hO:odfT:tW:wnr:",
									   ["flip",
										"daemon",
										"help",
										"Touch=",
										"toggle-touch",
										"Hover-click=",
										"toggle-hover-click",
										"writing=",
										"toggle-writing",
										"normal",
										"Rotate="
									   ]
			)
		except getopt.GetoptError:
			printHelp(2)
		for opt, arg in opts:
			if opt in ("-h", "--help"):
				printHelp()
			elif opt in ("-d", "--daemon"):
				Daemon()
			elif opt in ("-f", "--flip"):
				System().rotateDevices()
			elif opt in ("-r", "--Rotate"):
				if arg in ("normal", "left", "right", "inverted"):
					System().rotateDevices(mode={"normal": 0, "left": 1, "inverted": 2, "right": 3}[arg])
				else:
					printHelp(2)
			elif opt in ("-T", "--Touch"):
				if arg in ("on", "off"):
					System().tglFingerTouch(mode=arg)
				else:
					printHelp(2)
			elif opt in ("-t", "--toggle-touch"):
				System().tglFingerTouch()
			elif opt in ("-O", "--Hover-click"):
				if arg in ("on", "off"):
					System().tglHoverClick(mode={"off": "0", "on": "1"}[arg])
				else:
					printHelp(2)
			elif opt in ("-o", "--toggle-hover-click"):
				System().tglHoverClick()
			elif opt in ("-W", "--writing"):
				s = System()
				if arg in ("on", "off"):
					writingMode(s, arg)
				else:
					printHelp(2)
			elif opt in ("-w", "--toggle-writing"):
				s = System()
				writingMode(s)
			elif opt in ("-n", "--normal"):
				s = System()
				normalMode(s)


def writingMode(sysObj, arg=None):
	"""
	This is a helper function to make it possible to toggle the writing mode
	(my favorite).
	The decision which mode to choose depends on the current display orientation.
	Only if it's in the "normal" state the writing mode will be applied. any other state
	will lead to the normal (-n) mode to be applied.

	:param sysObj: has to be an instance of hinge_modules.System.System()
	:param arg: either "on" or "off" or nothing for toggeling
	"""
	if arg is None:
		if sysObj.display.getOrientation() == b'normal':
			arg = "on"
		else:
			normalMode(sysObj)
			return
	sysObj.tglHoverClick(mode={"on": "1", "off": "0"}[arg])
	sysObj.tglFingerTouch(mode={"on": "off", "off": "on"}[arg])
	sysObj.rotateDevices(mode={"off": 0, "on": 2}[arg])


def normalMode(sysObj):
	"""
	Activates the normal mode:
	- normal display/input devices orientation
	- HoverClick disabled
	- Touch input enabled

	:param sysObj: has to be an instance of hinge_modules.System.System()
	"""
	sysObj.rotateDevices(mode=0)
	sysObj.tglHoverClick(mode="0")
	sysObj.tglFingerTouch(mode="on")


def printHelp(errCode=0):
	print(
'''
Usage: hinge [options]

options:
-d                             start daemon
-f, --flip                     flip the rotation of the screen (rotate 180Â°)
-T, --Touch on,off             enable/disable finger touch input
-t, --toggle-touch             toggle finger touch input
-O, --Hover-click on,off       enable/disable wacom hover click
-o, --toggle-hover-click       toggle wacom hover click
-n, --normal                   reset settings to default
-r, --rotate <orientation>     set a specific orientation (absolute)
                               possible values: normal, left, right, inverted
-W, --writing on,off           enables/disables writing-mode
                               (turn to "inverted", disable touch input,
                               enable hover click)
-w, --toggle-writing           toggle writing-mode
''')
	sys.exit(errCode)

if __name__ == "__main__":
	main(sys.argv)
